# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src/ViennaRNA
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_rna.m4 \
	$(top_srcdir)/m4/ac_rna_build_requirements.m4 \
	$(top_srcdir)/m4/ac_rna_features.m4 \
	$(top_srcdir)/m4/ac_rna_lto.m4 \
	$(top_srcdir)/m4/ac_rna_macros.m4 \
	$(top_srcdir)/m4/ac_rna_osx.m4 \
	$(top_srcdir)/m4/ac_rna_refman.m4 \
	$(top_srcdir)/m4/ac_rna_subpackages.m4 \
	$(top_srcdir)/m4/ac_rna_swig.m4 \
	$(top_srcdir)/m4/ac_rna_tutorial.m4 \
	$(top_srcdir)/m4/ac_rna_unit_tests.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_openmp.m4 $(top_srcdir)/m4/ax_perl_ext.m4 \
	$(top_srcdir)/m4/ax_pkg_swig.m4 $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/ax_python2_devel.m4 \
	$(top_srcdir)/m4/ax_python3_devel.m4 \
	$(top_srcdir)/m4/ax_require_defined.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__noinst_HEADERS_DIST) \
	$(am__pkginclude_HEADERS_DIST) $(vrna_constraints_HEADERS) \
	$(vrna_datastructures_HEADERS) $(vrna_io_HEADERS) \
	$(vrna_loops_HEADERS) $(vrna_params_HEADERS) \
	$(vrna_plotting_HEADERS) $(vrna_search_HEADERS) \
	$(am__vrna_utils_HEADERS_DIST) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = vrna_config.h
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)" \
	"$(DESTDIR)$(pkgincludedir)" \
	"$(DESTDIR)$(vrna_constraintsdir)" \
	"$(DESTDIR)$(vrna_datastructuresdir)" \
	"$(DESTDIR)$(vrna_iodir)" "$(DESTDIR)$(vrna_loopsdir)" \
	"$(DESTDIR)$(vrna_paramsdir)" "$(DESTDIR)$(vrna_plottingdir)" \
	"$(DESTDIR)$(vrna_searchdir)" "$(DESTDIR)$(vrna_utilsdir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libRNA_la_DEPENDENCIES = libRNA_conv.la
am_libRNA_la_OBJECTS =
libRNA_la_OBJECTS = $(am_libRNA_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libRNA_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libRNA_la_LDFLAGS) $(LDFLAGS) -o $@
libRNA_constraints_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libRNA_constraints_la_OBJECTS = constraints/constraints.lo \
	constraints/SHAPE.lo constraints/hard.lo constraints/soft.lo \
	constraints/ligand.lo
libRNA_constraints_la_OBJECTS = $(am_libRNA_constraints_la_OBJECTS)
libRNA_conv_la_DEPENDENCIES = libRNA_constraints.la \
	libRNA_datastructures.la libRNA_utils.la libRNA_plotting.la \
	libRNA_params.la libRNA_eval.la libRNA_loops.la
am__libRNA_conv_la_SOURCES_DIST = fold_compound.c dist_vars.c \
	part_func.c part_func_wrappers.c pf_fold.c treedist.c \
	inverse.c ProfileDist.c RNAstruct.c mfe.c mfe_window.c \
	mfe_wrappers.c mfe_window_wrappers.c fold.c stringdist.c \
	subopt.c Lfold.c cofold.c part_func_co.c concentrations.c \
	ProfileAln.c duplex.c alifold.c alipfold.c LPfold.c \
	part_func_up.c ribo.c findpath.c MEA.c mm.c 2Dfold.c 2Dpfold.c \
	plex_functions.c ali_plex.c c_plex.c plex.c snofold.c snoop.c \
	move_set.c gquad.c perturbation_fold.c centroid.c model.c \
	dp_matrices.c boltzmann_sampling.c equilibrium_probs.c \
	neighbor.c walk.c ../@LIBSVM_DIR@/svm.cpp ../json/json.c \
	alphabet.c sequence.c unstructured_domains.c
@VRNA_AM_SWITCH_SVM_TRUE@am__objects_1 = ../@LIBSVM_DIR@/svm.lo
@VRNA_AM_SWITCH_JSON_TRUE@am__objects_2 = ../json/json.lo
am_libRNA_conv_la_OBJECTS = fold_compound.lo dist_vars.lo part_func.lo \
	part_func_wrappers.lo pf_fold.lo treedist.lo inverse.lo \
	ProfileDist.lo RNAstruct.lo mfe.lo mfe_window.lo \
	mfe_wrappers.lo mfe_window_wrappers.lo fold.lo stringdist.lo \
	subopt.lo Lfold.lo cofold.lo part_func_co.lo concentrations.lo \
	ProfileAln.lo duplex.lo alifold.lo alipfold.lo LPfold.lo \
	part_func_up.lo ribo.lo findpath.lo MEA.lo mm.lo 2Dfold.lo \
	2Dpfold.lo plex_functions.lo ali_plex.lo c_plex.lo plex.lo \
	snofold.lo snoop.lo move_set.lo gquad.lo perturbation_fold.lo \
	centroid.lo model.lo dp_matrices.lo boltzmann_sampling.lo \
	equilibrium_probs.lo neighbor.lo walk.lo $(am__objects_1) \
	$(am__objects_2) alphabet.lo sequence.lo \
	unstructured_domains.lo
libRNA_conv_la_OBJECTS = $(am_libRNA_conv_la_OBJECTS)
libRNA_datastructures_la_LIBADD =
am_libRNA_datastructures_la_OBJECTS =  \
	datastructures/basic_datastructures.lo datastructures/lists.lo \
	datastructures/char_stream.lo datastructures/stream_output.lo \
	datastructures/hash_tables.lo
libRNA_datastructures_la_OBJECTS =  \
	$(am_libRNA_datastructures_la_OBJECTS)
libRNA_eval_la_LIBADD =
am_libRNA_eval_la_OBJECTS = eval.lo eval_wrappers.lo
libRNA_eval_la_OBJECTS = $(am_libRNA_eval_la_OBJECTS)
libRNA_loops_la_LIBADD =
am_libRNA_loops_la_OBJECTS = loops/external.lo loops/external_bt.lo \
	loops/external_pf.lo loops/hairpin.lo loops/hairpin_bt.lo \
	loops/hairpin_pf.lo loops/internal.lo loops/internal_bt.lo \
	loops/internal_pf.lo loops/multibranch.lo \
	loops/multibranch_bt.lo loops/multibranch_pf.lo
libRNA_loops_la_OBJECTS = $(am_libRNA_loops_la_OBJECTS)
libRNA_params_la_LIBADD =
am_libRNA_params_la_OBJECTS = params/io.lo params/default.lo \
	params/params.lo params/convert.lo
libRNA_params_la_OBJECTS = $(am_libRNA_params_la_OBJECTS)
libRNA_plotting_la_LIBADD =
am_libRNA_plotting_la_OBJECTS = plotting/alignments.lo \
	plotting/layouts.lo plotting/probabilities.lo \
	plotting/structures.lo plotting/plot_utils.lo \
	plotting/naview.lo
libRNA_plotting_la_OBJECTS = $(am_libRNA_plotting_la_OBJECTS)
libRNA_special_const_la_LIBADD =
am_libRNA_special_const_la_OBJECTS = special_const.lo ugly_bt.lo
libRNA_special_const_la_OBJECTS =  \
	$(am_libRNA_special_const_la_OBJECTS)
libRNA_utils_la_LIBADD =
am__libRNA_utils_la_SOURCES_DIST = utils/utils.c utils/string_utils.c \
	utils/structure_utils.c utils/structure_tree.c \
	utils/msa_utils.c io/io_utils.c io/file_formats.c \
	io/file_formats_msa.c search/BoyerMoore.c commands.c units.c \
	combinatorics.c utils/svm_utils.c
@VRNA_AM_SWITCH_SVM_TRUE@am__objects_3 = utils/svm_utils.lo
am_libRNA_utils_la_OBJECTS = utils/utils.lo utils/string_utils.lo \
	utils/structure_utils.lo utils/structure_tree.lo \
	utils/msa_utils.lo io/io_utils.lo io/file_formats.lo \
	io/file_formats_msa.lo search/BoyerMoore.lo commands.lo \
	units.lo combinatorics.lo $(am__objects_3)
libRNA_utils_la_OBJECTS = $(am_libRNA_utils_la_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libRNA_la_SOURCES) $(nodist_EXTRA_libRNA_la_SOURCES) \
	$(libRNA_constraints_la_SOURCES) $(libRNA_conv_la_SOURCES) \
	$(libRNA_datastructures_la_SOURCES) $(libRNA_eval_la_SOURCES) \
	$(libRNA_loops_la_SOURCES) $(libRNA_params_la_SOURCES) \
	$(libRNA_plotting_la_SOURCES) \
	$(libRNA_special_const_la_SOURCES) $(libRNA_utils_la_SOURCES)
DIST_SOURCES = $(libRNA_la_SOURCES) $(libRNA_constraints_la_SOURCES) \
	$(am__libRNA_conv_la_SOURCES_DIST) \
	$(libRNA_datastructures_la_SOURCES) $(libRNA_eval_la_SOURCES) \
	$(libRNA_loops_la_SOURCES) $(libRNA_params_la_SOURCES) \
	$(libRNA_plotting_la_SOURCES) \
	$(libRNA_special_const_la_SOURCES) \
	$(am__libRNA_utils_la_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__noinst_HEADERS_DIST = params/intl11.h params/intl11dH.h \
	params/intl21.h params/intl21dH.h params/intl22.h \
	params/intl22dH.h params/1.8.4_epars.h params/1.8.4_intloops.h \
	list.h ../@LIBSVM_DIR@/svm.h ../json/json.h special_const.h \
	ugly_bt.h
am__pkginclude_HEADERS_DIST = pair_mat.h RNAstruct.h dist_vars.h mfe.h \
	mfe_window.h fold.h part_func.h part_func_window.h \
	stringdist.h edit_cost.h fold_vars.h profiledist.h treedist.h \
	inverse.h subopt.h cofold.h duplex.h alifold.h part_func_co.h \
	concentrations.h ProfileAln.h LPfold.h Lfold.h part_func_up.h \
	ribo.h findpath.h data_structures.h char_stream.h \
	stream_output.h fold_compound.h MEA.h mm.h loop_energies.h \
	exterior_loops.h hairpin_loops.h interior_loops.h \
	multibranch_loops.h 2Dfold.h 2Dpfold.h PKplex.h ali_plex.h \
	plex.h snofold.h snoop.h move_set.h gquad.h constraints.h \
	eval.h perturbation_fold.h centroid.h utils.h \
	structure_utils.h string_utils.h aln_util.h model.h \
	dp_matrices.h PS_dot.h plot_structure.h plot_aln.h \
	plot_utils.h plot_layouts.h naview.h boltzmann_sampling.h \
	equilibrium_probs.h constraints_ligand.h constraints_SHAPE.h \
	constraints_hard.h constraints_soft.h alphabet.h sequence.h \
	grammar.h structured_domains.h unstructured_domains.h \
	file_utils.h file_formats.h file_formats_msa.h energy_par.h \
	energy_const.h params.h read_epars.h convert_epars.h \
	commands.h units.h combinatorics.h neighbor.h walk.h \
	svm_utils.h ../@LIBSVM_DIR@/svm.h ../json/json.h
am__vrna_utils_HEADERS_DIST = utils/basic.h utils/strings.h \
	utils/structures.h utils/alignments.h utils/svm.h
HEADERS = $(nodist_pkginclude_HEADERS) $(noinst_HEADERS) \
	$(pkginclude_HEADERS) $(vrna_constraints_HEADERS) \
	$(vrna_datastructures_HEADERS) $(vrna_io_HEADERS) \
	$(vrna_loops_HEADERS) $(vrna_params_HEADERS) \
	$(vrna_plotting_HEADERS) $(vrna_search_HEADERS) \
	$(vrna_utils_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/vrna_config.h.in \
	$(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CFLAGS = $(RNA_CFLAGS) $(SIMD_CFLAGS) $(PTHREAD_CFLAGS)
AM_CPPFLAGS = $(RNA_CPPFLAGS) ${SVM_INC} -I$(top_srcdir)/src ${JSON_INC}
AM_CXXFLAGS = $(RNA_CXXFLAGS) $(SIMD_CFLAGS) $(PTHREAD_CFLAGS)
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = $(RNA_LDFLAGS) $(PTHREAD_LIBS)
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHECK_CFLAGS = @CHECK_CFLAGS@
CHECK_LIBS = @CHECK_LIBS@
CLUSTER_DIR = @CLUSTER_DIR@
CONFIG_BOUSTROPHEDON = @CONFIG_BOUSTROPHEDON@
CONFIG_DISABLE_C11_FEATURES = @CONFIG_DISABLE_C11_FEATURES@
CONFIG_FLOAT_PF = @CONFIG_FLOAT_PF@
CONFIG_GSL = @CONFIG_GSL@
CONFIG_JSON = @CONFIG_JSON@
CONFIG_LTO = @CONFIG_LTO@
CONFIG_OPENMP = @CONFIG_OPENMP@
CONFIG_SSE_IMPLEMENTATION = @CONFIG_SSE_IMPLEMENTATION@
CONFIG_SVM = @CONFIG_SVM@
CONFIG_TTY_COLORS = @CONFIG_TTY_COLORS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DEPRECATION_WARNING = @DEPRECATION_WARNING@
DIFF = @DIFF@
DISABLE_C11_FEATURES = @DISABLE_C11_FEATURES@
DLLTOOL = @DLLTOOL@
DOXYGEN_CMD_BIBTEX = @DOXYGEN_CMD_BIBTEX@
DOXYGEN_CMD_DVIPDF = @DOXYGEN_CMD_DVIPDF@
DOXYGEN_CMD_LATEX = @DOXYGEN_CMD_LATEX@
DOXYGEN_CMD_MAKEINDEX = @DOXYGEN_CMD_MAKEINDEX@
DOXYGEN_CONF = @DOXYGEN_CONF@
DOXYGEN_DOCDIR = @DOXYGEN_DOCDIR@
DOXYGEN_GENERATE_HTML = @DOXYGEN_GENERATE_HTML@
DOXYGEN_GENERATE_LATEX = @DOXYGEN_GENERATE_LATEX@
DOXYGEN_HAVE_DOT = @DOXYGEN_HAVE_DOT@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_SRCDIR = @DOXYGEN_SRCDIR@
DOXYGEN_WITH_PDFLATEX = @DOXYGEN_WITH_PDFLATEX@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FLOAT_PF_FLAG = @FLOAT_PF_FLAG@
GENGETOPT = @GENGETOPT@
GREP = @GREP@
GSL_LIBS = @GSL_LIBS@
HDIUTIL = @HDIUTIL@
HELP2MAN = @HELP2MAN@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISODATE = @ISODATE@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBGOMPFLAG = @LIBGOMPFLAG@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBSVM_DIR = @LIBSVM_DIR@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LTO_CFLAGS = @LTO_CFLAGS@
LTO_CXXFLAGS = @LTO_CXXFLAGS@
LTO_LDFLAGS = @LTO_LDFLAGS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MACOSX_INSTALLER = @MACOSX_INSTALLER@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENMP_CFLAGS = @OPENMP_CFLAGS@
OPENMP_CXXFLAGS = @OPENMP_CXXFLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
OUR_AR = @OUR_AR@
OUR_NM = @OUR_NM@
OUR_RANLIB = @OUR_RANLIB@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PERL_ARCH_RELATIVE_INSTALL_DIR = @PERL_ARCH_RELATIVE_INSTALL_DIR@
PERL_EXT_CPPFLAGS = @PERL_EXT_CPPFLAGS@
PERL_EXT_INC = @PERL_EXT_INC@
PERL_EXT_LDFLAGS = @PERL_EXT_LDFLAGS@
PERL_EXT_LIB = @PERL_EXT_LIB@
PERL_EXT_PREFIX = @PERL_EXT_PREFIX@
PERL_EXT_SITEARCH = @PERL_EXT_SITEARCH@
PERL_EXT_SITELIB = @PERL_EXT_SITELIB@
PERL_EXT_SITEPREFIX = @PERL_EXT_SITEPREFIX@
PERL_EXT_VENDORARCH = @PERL_EXT_VENDORARCH@
PERL_EXT_VENDORLIB = @PERL_EXT_VENDORLIB@
PERL_EXT_VENDORPREFIX = @PERL_EXT_VENDORPREFIX@
PERL_INTERFACE = @PERL_INTERFACE@
PERL_LIB_RELATIVE_INSTALL_DIR = @PERL_LIB_RELATIVE_INSTALL_DIR@
PERL_SO = @PERL_SO@
PKGBUILD = @PKGBUILD@
PKGPYEXEC2DIR = @PKGPYEXEC2DIR@
PKGPYTHON2DIR = @PKGPYTHON2DIR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POW_LIB = @POW_LIB@
PRODUCTBUILD = @PRODUCTBUILD@
PS_TEMPLATE_FILES = @PS_TEMPLATE_FILES@
PS_TEMPLATE_FILES_HEX = @PS_TEMPLATE_FILES_HEX@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYEXEC2DIR = @PYEXEC2DIR@
PYTHON2 = @PYTHON2@
PYTHON2DIR = @PYTHON2DIR@
PYTHON2_DIR = @PYTHON2_DIR@
PYTHON2_EXECDIR = @PYTHON2_EXECDIR@
PYTHON2_INC = @PYTHON2_INC@
PYTHON2_INTERFACE = @PYTHON2_INTERFACE@
PYTHON2_LD = @PYTHON2_LD@
PYTHON2_LDFLAGS = @PYTHON2_LDFLAGS@
PYTHON2_SO = @PYTHON2_SO@
PYTHON3 = @PYTHON3@
PYTHON3_CACHE_OPT1_EXT = @PYTHON3_CACHE_OPT1_EXT@
PYTHON3_CACHE_TAG = @PYTHON3_CACHE_TAG@
PYTHON3_DIR = @PYTHON3_DIR@
PYTHON3_EXECDIR = @PYTHON3_EXECDIR@
PYTHON3_INC = @PYTHON3_INC@
PYTHON3_INTERFACE = @PYTHON3_INTERFACE@
PYTHON3_LD = @PYTHON3_LD@
PYTHON3_LDFLAGS = @PYTHON3_LDFLAGS@
PYTHON3_SO = @PYTHON3_SO@
RANLIB = @RANLIB@
REFDOC_PREDEF_FLOAT_PF = @REFDOC_PREDEF_FLOAT_PF@
REFDOC_PREDEF_JSON = @REFDOC_PREDEF_JSON@
REFDOC_PREDEF_SVM = @REFDOC_PREDEF_SVM@
REFERENCE_MANUAL_PDF_NAME = @REFERENCE_MANUAL_PDF_NAME@
REFERENCE_MANUAL_TAGFILE = @REFERENCE_MANUAL_TAGFILE@
RNA_CFLAGS = @RNA_CFLAGS@
RNA_CPPFLAGS = @RNA_CPPFLAGS@
RNA_CXXFLAGS = @RNA_CXXFLAGS@
RNA_LDFLAGS = @RNA_LDFLAGS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIMD_CFLAGS = @SIMD_CFLAGS@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
TUTORIAL_CMD_DVIPDF = @TUTORIAL_CMD_DVIPDF@
TUTORIAL_CMD_HTLATEX = @TUTORIAL_CMD_HTLATEX@
TUTORIAL_CMD_LATEX = @TUTORIAL_CMD_LATEX@
TUTORIAL_DOCDIR = @TUTORIAL_DOCDIR@
TUTORIAL_PDF_NAME = @TUTORIAL_PDF_NAME@
TUTORIAL_PROJECT_NAME = @TUTORIAL_PROJECT_NAME@
TUTORIAL_SRCDIR = @TUTORIAL_SRCDIR@
USER_AR = @USER_AR@
USER_NM = @USER_NM@
USER_RANLIB = @USER_RANLIB@
VERSION = @VERSION@
VRNA_CFLAGS = @VRNA_CFLAGS@
VRNA_LIBS = @VRNA_LIBS@
VRNA_VERSION_MAJOR = @VRNA_VERSION_MAJOR@
VRNA_VERSION_MINOR = @VRNA_VERSION_MINOR@
VRNA_VERSION_PATCH = @VRNA_VERSION_PATCH@
XXD = @XXD@
_latex_cmd = @_latex_cmd@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bibtex = @bibtex@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dot = @dot@
doxygen = @doxygen@
dvidir = @dvidir@
dvipdf = @dvipdf@
egrep = @egrep@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htlatex = @htlatex@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
latex = @latex@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
makeindex = @makeindex@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pdflatex = @pdflatex@
perl = @perl@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
py2execdir = @py2execdir@
py3execdir = @py3execdir@
python2dir = @python2dir@
python3dir = @python3dir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
SUBDIRS = static
vrna_constraintsdir = $(pkgincludedir)/constraints
vrna_paramsdir = $(pkgincludedir)/params
vrna_utilsdir = $(pkgincludedir)/utils
vrna_iodir = $(pkgincludedir)/io
vrna_searchdir = $(pkgincludedir)/search
vrna_plottingdir = $(pkgincludedir)/plotting
vrna_loopsdir = $(pkgincludedir)/loops
vrna_datastructuresdir = $(pkgincludedir)/datastructures

# the library names to build
lib_LTLIBRARIES = libRNA.la

# convenience library
noinst_LTLIBRARIES = libRNA_conv.la \
                      libRNA_constraints.la \
                      libRNA_datastructures.la \
                      libRNA_utils.la \
                      libRNA_plotting.la \
                      libRNA_params.la \
                      libRNA_loops.la \
                      libRNA_eval.la \
                      libRNA_special_const.la


# where to install the headers on the system
libRNA_ladir = $(includedir)/ViennaRNA
libRNA_la_SOURCES = 

# ldflags to avoid version information
libRNA_la_LIBADD = libRNA_conv.la
libRNA_la_LDFLAGS = -avoid-version -static $(LTO_LDFLAGS) $(PTHREAD_LIBS)
libRNA_conv_la_LIBADD = \
    libRNA_constraints.la \
    libRNA_datastructures.la \
    libRNA_utils.la \
    libRNA_plotting.la \
    libRNA_params.la \
    libRNA_eval.la \
    libRNA_loops.la

@VRNA_AM_SWITCH_SVM_FALSE@nodist_EXTRA_libRNA_la_SOURCES = 

# Dummy C++ source to cause C++ linking.
@VRNA_AM_SWITCH_SVM_TRUE@nodist_EXTRA_libRNA_la_SOURCES = dummy.cxx
@VRNA_AM_SWITCH_SVM_TRUE@SVM_SRC = ../@LIBSVM_DIR@/svm.cpp
@VRNA_AM_SWITCH_SVM_TRUE@SVM_INC = -I$(top_srcdir)/src/@LIBSVM_DIR@
@VRNA_AM_SWITCH_SVM_TRUE@SVM_H = ../@LIBSVM_DIR@/svm.h
@VRNA_AM_SWITCH_SVM_TRUE@SVM_UTILS = utils/svm_utils.c
@VRNA_AM_SWITCH_SVM_TRUE@SVM_UTILS_H = utils/svm.h
@VRNA_AM_SWITCH_SVM_TRUE@SVM_UTILS_H_OLD = svm_utils.h
@VRNA_AM_SWITCH_JSON_TRUE@JSON_SRC = ../json/json.c
@VRNA_AM_SWITCH_JSON_TRUE@JSON_H = ../json/json.h
@VRNA_AM_SWITCH_JSON_TRUE@JSON_INC = -I$(top_srcdir)/src/json
pkginclude_HEADERS = \
    pair_mat.h \
    RNAstruct.h \
    dist_vars.h \
    mfe.h \
    mfe_window.h \
    fold.h \
    part_func.h \
    part_func_window.h \
    stringdist.h \
    edit_cost.h \
    fold_vars.h \
    profiledist.h \
    treedist.h \
    inverse.h \
    subopt.h \
    cofold.h \
    duplex.h \
    alifold.h \
    part_func_co.h \
    concentrations.h \
    ProfileAln.h \
    LPfold.h \
    Lfold.h \
    part_func_up.h \
    ribo.h \
    findpath.h \
    data_structures.h \
    char_stream.h \
    stream_output.h \
    fold_compound.h \
    MEA.h \
    mm.h \
    loop_energies.h \
    exterior_loops.h \
    hairpin_loops.h \
    interior_loops.h \
    multibranch_loops.h \
    2Dfold.h \
    2Dpfold.h \
    PKplex.h\
    ali_plex.h \
    plex.h \
    snofold.h \
    snoop.h \
    move_set.h\
    gquad.h \
    constraints.h \
    eval.h \
    perturbation_fold.h \
    centroid.h\
    utils.h \
    structure_utils.h \
    string_utils.h \
    aln_util.h \
    model.h \
    dp_matrices.h \
    PS_dot.h \
    plot_structure.h \
    plot_aln.h \
    plot_utils.h \
    plot_layouts.h \
    naview.h \
    boltzmann_sampling.h \
    equilibrium_probs.h \
    constraints_ligand.h \
    constraints_SHAPE.h \
    constraints_hard.h \
    constraints_soft.h \
    alphabet.h \
    sequence.h \
    grammar.h \
    structured_domains.h \
    unstructured_domains.h \
    file_utils.h \
    file_formats.h \
    file_formats_msa.h \
    energy_par.h \
    energy_const.h \
    params.h \
    read_epars.h \
    convert_epars.h \
    commands.h \
    units.h \
    combinatorics.h \
    neighbor.h \
    walk.h \
    ${SVM_UTILS_H_OLD} \
    ${SVM_H} \
    ${JSON_H}

vrna_constraints_HEADERS = \
    constraints/basic.h \
    constraints/ligand.h \
    constraints/SHAPE.h \
    constraints/hard.h \
    constraints/soft.h

vrna_loops_HEADERS = \
    loops/all.h \
    loops/external.h \
    loops/hairpin.h \
    loops/internal.h \
    loops/multibranch.h

vrna_utils_HEADERS = \
    utils/basic.h \
    utils/strings.h \
    utils/structures.h \
    utils/alignments.h \
    ${SVM_UTILS_H}

vrna_search_HEADERS = \
    search/BoyerMoore.h

vrna_plotting_HEADERS = \
    plotting/alignments.h \
    plotting/layouts.h \
    plotting/probabilities.h \
    plotting/structures.h \
    plotting/utils.h \
    plotting/naview.h

vrna_io_HEADERS = \
    io/utils.h \
    io/file_formats.h \
    io/file_formats_msa.h

vrna_params_HEADERS = \
    params/default.h \
    params/constants.h \
    params/basic.h \
    params/io.h \
    params/convert.h

vrna_datastructures_HEADERS = \
    datastructures/basic.h \
    datastructures/lists.h \
    datastructures/char_stream.h \
    datastructures/stream_output.h \
    datastructures/hash_tables.h

libRNA_conv_la_SOURCES = \
    fold_compound.c \
    dist_vars.c \
    part_func.c \
    part_func_wrappers.c \
    pf_fold.c \
    treedist.c \
    inverse.c \
    ProfileDist.c \
    RNAstruct.c \
    mfe.c \
    mfe_window.c \
    mfe_wrappers.c \
    mfe_window_wrappers.c \
    fold.c \
    stringdist.c \
    subopt.c \
    Lfold.c \
    cofold.c \
    part_func_co.c \
    concentrations.c \
    ProfileAln.c \
    duplex.c \
    alifold.c \
    alipfold.c \
    LPfold.c \
    part_func_up.c \
    ribo.c \
    findpath.c \
    MEA.c \
    mm.c \
    2Dfold.c \
    2Dpfold.c \
    plex_functions.c \
    ali_plex.c \
    c_plex.c \
    plex.c \
    snofold.c \
    snoop.c \
    move_set.c \
    gquad.c \
    perturbation_fold.c \
    centroid.c \
    model.c \
    dp_matrices.c \
    boltzmann_sampling.c \
    equilibrium_probs.c \
    neighbor.c \
    walk.c \
    ${SVM_SRC} \
    ${JSON_SRC} \
    alphabet.c \
    sequence.c \
    unstructured_domains.c

libRNA_eval_la_SOURCES = \
    eval.c \
    eval_wrappers.c

libRNA_constraints_la_SOURCES = \
    constraints/constraints.c \
    constraints/SHAPE.c \
    constraints/hard.c \
    constraints/soft.c \
    constraints/ligand.c

libRNA_utils_la_SOURCES = \
    utils/utils.c \
    utils/string_utils.c \
    utils/structure_utils.c \
    utils/structure_tree.c \
    utils/msa_utils.c \
    io/io_utils.c \
    io/file_formats.c \
    io/file_formats_msa.c \
    search/BoyerMoore.c \
    commands.c \
    units.c \
    combinatorics.c \
    ${SVM_UTILS}

libRNA_plotting_la_SOURCES = \
    plotting/alignments.c \
    plotting/layouts.c \
    plotting/probabilities.c \
    plotting/structures.c \
    plotting/plot_utils.c \
    plotting/naview.c

libRNA_loops_la_SOURCES = \
    loops/external.c \
    loops/external_bt.c \
    loops/external_pf.c \
    loops/hairpin.c \
    loops/hairpin_bt.c \
    loops/hairpin_pf.c \
    loops/internal.c \
    loops/internal_bt.c \
    loops/internal_pf.c \
    loops/multibranch.c \
    loops/multibranch_bt.c \
    loops/multibranch_pf.c

libRNA_params_la_SOURCES = \
    params/io.c \
    params/default.c \
    params/params.c \
    params/convert.c

libRNA_datastructures_la_SOURCES = \
    datastructures/basic_datastructures.c \
    datastructures/lists.c \
    datastructures/char_stream.c \
    datastructures/stream_output.c \
    datastructures/hash_tables.c

libRNA_special_const_la_SOURCES = \
    special_const.c \
    ugly_bt.c

noinst_HEADERS = params/intl11.h \
                  params/intl11dH.h \
                  params/intl21.h \
                  params/intl21dH.h \
                  params/intl22.h \
                  params/intl22dH.h \
                  params/1.8.4_epars.h \
                  params/1.8.4_intloops.h \
                  list.h\
                  ${SVM_H} \
                  ${JSON_H}\
                  special_const.h \
                  ugly_bt.h

nodist_pkginclude_HEADERS = vrna_config.h
EXTRA_DIST = $(pkginclude_HEADERS) \
              loops/external_hc.inc \
              loops/external_sc.inc \
              loops/external_sc_pf.inc \
              loops/hairpin_hc.inc \
              loops/hairpin_sc.inc \
              loops/hairpin_sc_pf.inc \
              loops/internal_hc.inc \
              loops/internal_sc.inc \
              loops/internal_sc_pf.inc \
              loops/multibranch_hc.inc \
              loops/multibranch_sc.inc \
              loops/multibranch_sc_pf.inc \
              params/svm_model_avg.inc \
              params/svm_model_sd.inc \
              ${SVM_H} \
              ${JSON_H} \
              color_output.inc \
              special_const.h \
              ugly_bt.h

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/ViennaRNA/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/ViennaRNA/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
vrna_config.h: $(top_builddir)/config.status $(srcdir)/vrna_config.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libRNA.la: $(libRNA_la_OBJECTS) $(libRNA_la_DEPENDENCIES) $(EXTRA_libRNA_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libRNA_la_LINK) -rpath $(libdir) $(libRNA_la_OBJECTS) $(libRNA_la_LIBADD) $(LIBS)
constraints/$(am__dirstamp):
	@$(MKDIR_P) constraints
	@: > constraints/$(am__dirstamp)
constraints/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) constraints/$(DEPDIR)
	@: > constraints/$(DEPDIR)/$(am__dirstamp)
constraints/constraints.lo: constraints/$(am__dirstamp) \
	constraints/$(DEPDIR)/$(am__dirstamp)
constraints/SHAPE.lo: constraints/$(am__dirstamp) \
	constraints/$(DEPDIR)/$(am__dirstamp)
constraints/hard.lo: constraints/$(am__dirstamp) \
	constraints/$(DEPDIR)/$(am__dirstamp)
constraints/soft.lo: constraints/$(am__dirstamp) \
	constraints/$(DEPDIR)/$(am__dirstamp)
constraints/ligand.lo: constraints/$(am__dirstamp) \
	constraints/$(DEPDIR)/$(am__dirstamp)

libRNA_constraints.la: $(libRNA_constraints_la_OBJECTS) $(libRNA_constraints_la_DEPENDENCIES) $(EXTRA_libRNA_constraints_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libRNA_constraints_la_OBJECTS) $(libRNA_constraints_la_LIBADD) $(LIBS)
../@LIBSVM_DIR@/$(am__dirstamp):
	@$(MKDIR_P) ../@LIBSVM_DIR@
	@: > ../@LIBSVM_DIR@/$(am__dirstamp)
../@LIBSVM_DIR@/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../@LIBSVM_DIR@/$(DEPDIR)
	@: > ../@LIBSVM_DIR@/$(DEPDIR)/$(am__dirstamp)
../@LIBSVM_DIR@/svm.lo: ../@LIBSVM_DIR@/$(am__dirstamp) \
	../@LIBSVM_DIR@/$(DEPDIR)/$(am__dirstamp)
../json/$(am__dirstamp):
	@$(MKDIR_P) ../json
	@: > ../json/$(am__dirstamp)
../json/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../json/$(DEPDIR)
	@: > ../json/$(DEPDIR)/$(am__dirstamp)
../json/json.lo: ../json/$(am__dirstamp) \
	../json/$(DEPDIR)/$(am__dirstamp)

libRNA_conv.la: $(libRNA_conv_la_OBJECTS) $(libRNA_conv_la_DEPENDENCIES) $(EXTRA_libRNA_conv_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libRNA_conv_la_OBJECTS) $(libRNA_conv_la_LIBADD) $(LIBS)
datastructures/$(am__dirstamp):
	@$(MKDIR_P) datastructures
	@: > datastructures/$(am__dirstamp)
datastructures/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) datastructures/$(DEPDIR)
	@: > datastructures/$(DEPDIR)/$(am__dirstamp)
datastructures/basic_datastructures.lo:  \
	datastructures/$(am__dirstamp) \
	datastructures/$(DEPDIR)/$(am__dirstamp)
datastructures/lists.lo: datastructures/$(am__dirstamp) \
	datastructures/$(DEPDIR)/$(am__dirstamp)
datastructures/char_stream.lo: datastructures/$(am__dirstamp) \
	datastructures/$(DEPDIR)/$(am__dirstamp)
datastructures/stream_output.lo: datastructures/$(am__dirstamp) \
	datastructures/$(DEPDIR)/$(am__dirstamp)
datastructures/hash_tables.lo: datastructures/$(am__dirstamp) \
	datastructures/$(DEPDIR)/$(am__dirstamp)

libRNA_datastructures.la: $(libRNA_datastructures_la_OBJECTS) $(libRNA_datastructures_la_DEPENDENCIES) $(EXTRA_libRNA_datastructures_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libRNA_datastructures_la_OBJECTS) $(libRNA_datastructures_la_LIBADD) $(LIBS)

libRNA_eval.la: $(libRNA_eval_la_OBJECTS) $(libRNA_eval_la_DEPENDENCIES) $(EXTRA_libRNA_eval_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libRNA_eval_la_OBJECTS) $(libRNA_eval_la_LIBADD) $(LIBS)
loops/$(am__dirstamp):
	@$(MKDIR_P) loops
	@: > loops/$(am__dirstamp)
loops/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) loops/$(DEPDIR)
	@: > loops/$(DEPDIR)/$(am__dirstamp)
loops/external.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/external_bt.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/external_pf.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/hairpin.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/hairpin_bt.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/hairpin_pf.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/internal.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/internal_bt.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/internal_pf.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/multibranch.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/multibranch_bt.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)
loops/multibranch_pf.lo: loops/$(am__dirstamp) \
	loops/$(DEPDIR)/$(am__dirstamp)

libRNA_loops.la: $(libRNA_loops_la_OBJECTS) $(libRNA_loops_la_DEPENDENCIES) $(EXTRA_libRNA_loops_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libRNA_loops_la_OBJECTS) $(libRNA_loops_la_LIBADD) $(LIBS)
params/$(am__dirstamp):
	@$(MKDIR_P) params
	@: > params/$(am__dirstamp)
params/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) params/$(DEPDIR)
	@: > params/$(DEPDIR)/$(am__dirstamp)
params/io.lo: params/$(am__dirstamp) params/$(DEPDIR)/$(am__dirstamp)
params/default.lo: params/$(am__dirstamp) \
	params/$(DEPDIR)/$(am__dirstamp)
params/params.lo: params/$(am__dirstamp) \
	params/$(DEPDIR)/$(am__dirstamp)
params/convert.lo: params/$(am__dirstamp) \
	params/$(DEPDIR)/$(am__dirstamp)

libRNA_params.la: $(libRNA_params_la_OBJECTS) $(libRNA_params_la_DEPENDENCIES) $(EXTRA_libRNA_params_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libRNA_params_la_OBJECTS) $(libRNA_params_la_LIBADD) $(LIBS)
plotting/$(am__dirstamp):
	@$(MKDIR_P) plotting
	@: > plotting/$(am__dirstamp)
plotting/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) plotting/$(DEPDIR)
	@: > plotting/$(DEPDIR)/$(am__dirstamp)
plotting/alignments.lo: plotting/$(am__dirstamp) \
	plotting/$(DEPDIR)/$(am__dirstamp)
plotting/layouts.lo: plotting/$(am__dirstamp) \
	plotting/$(DEPDIR)/$(am__dirstamp)
plotting/probabilities.lo: plotting/$(am__dirstamp) \
	plotting/$(DEPDIR)/$(am__dirstamp)
plotting/structures.lo: plotting/$(am__dirstamp) \
	plotting/$(DEPDIR)/$(am__dirstamp)
plotting/plot_utils.lo: plotting/$(am__dirstamp) \
	plotting/$(DEPDIR)/$(am__dirstamp)
plotting/naview.lo: plotting/$(am__dirstamp) \
	plotting/$(DEPDIR)/$(am__dirstamp)

libRNA_plotting.la: $(libRNA_plotting_la_OBJECTS) $(libRNA_plotting_la_DEPENDENCIES) $(EXTRA_libRNA_plotting_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libRNA_plotting_la_OBJECTS) $(libRNA_plotting_la_LIBADD) $(LIBS)

libRNA_special_const.la: $(libRNA_special_const_la_OBJECTS) $(libRNA_special_const_la_DEPENDENCIES) $(EXTRA_libRNA_special_const_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libRNA_special_const_la_OBJECTS) $(libRNA_special_const_la_LIBADD) $(LIBS)
utils/$(am__dirstamp):
	@$(MKDIR_P) utils
	@: > utils/$(am__dirstamp)
utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) utils/$(DEPDIR)
	@: > utils/$(DEPDIR)/$(am__dirstamp)
utils/utils.lo: utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
utils/string_utils.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/structure_utils.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/structure_tree.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/msa_utils.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
io/$(am__dirstamp):
	@$(MKDIR_P) io
	@: > io/$(am__dirstamp)
io/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) io/$(DEPDIR)
	@: > io/$(DEPDIR)/$(am__dirstamp)
io/io_utils.lo: io/$(am__dirstamp) io/$(DEPDIR)/$(am__dirstamp)
io/file_formats.lo: io/$(am__dirstamp) io/$(DEPDIR)/$(am__dirstamp)
io/file_formats_msa.lo: io/$(am__dirstamp) \
	io/$(DEPDIR)/$(am__dirstamp)
search/$(am__dirstamp):
	@$(MKDIR_P) search
	@: > search/$(am__dirstamp)
search/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) search/$(DEPDIR)
	@: > search/$(DEPDIR)/$(am__dirstamp)
search/BoyerMoore.lo: search/$(am__dirstamp) \
	search/$(DEPDIR)/$(am__dirstamp)
utils/svm_utils.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)

libRNA_utils.la: $(libRNA_utils_la_OBJECTS) $(libRNA_utils_la_DEPENDENCIES) $(EXTRA_libRNA_utils_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libRNA_utils_la_OBJECTS) $(libRNA_utils_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../@LIBSVM_DIR@/*.$(OBJEXT)
	-rm -f ../@LIBSVM_DIR@/*.lo
	-rm -f ../json/*.$(OBJEXT)
	-rm -f ../json/*.lo
	-rm -f constraints/*.$(OBJEXT)
	-rm -f constraints/*.lo
	-rm -f datastructures/*.$(OBJEXT)
	-rm -f datastructures/*.lo
	-rm -f io/*.$(OBJEXT)
	-rm -f io/*.lo
	-rm -f loops/*.$(OBJEXT)
	-rm -f loops/*.lo
	-rm -f params/*.$(OBJEXT)
	-rm -f params/*.lo
	-rm -f plotting/*.$(OBJEXT)
	-rm -f plotting/*.lo
	-rm -f search/*.$(OBJEXT)
	-rm -f search/*.lo
	-rm -f utils/*.$(OBJEXT)
	-rm -f utils/*.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@../@LIBSVM_DIR@/$(DEPDIR)/svm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@../json/$(DEPDIR)/json.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/2Dfold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/2Dpfold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LPfold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Lfold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MEA.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ProfileAln.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ProfileDist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAstruct.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ali_plex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alifold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alipfold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alphabet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boltzmann_sampling.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/c_plex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/centroid.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cofold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/combinatorics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/commands.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/concentrations.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dist_vars.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dp_matrices.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dummy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/duplex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equilibrium_probs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eval.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eval_wrappers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/findpath.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fold_compound.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gquad.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inverse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mfe.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mfe_window.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mfe_window_wrappers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mfe_wrappers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/model.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/move_set.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neighbor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/part_func.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/part_func_co.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/part_func_up.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/part_func_wrappers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perturbation_fold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pf_fold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plex_functions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ribo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sequence.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snofold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snoop.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/special_const.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stringdist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subopt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treedist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ugly_bt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/units.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unstructured_domains.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/walk.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@constraints/$(DEPDIR)/SHAPE.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@constraints/$(DEPDIR)/constraints.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@constraints/$(DEPDIR)/hard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@constraints/$(DEPDIR)/ligand.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@constraints/$(DEPDIR)/soft.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@datastructures/$(DEPDIR)/basic_datastructures.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@datastructures/$(DEPDIR)/char_stream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@datastructures/$(DEPDIR)/hash_tables.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@datastructures/$(DEPDIR)/lists.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@datastructures/$(DEPDIR)/stream_output.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/$(DEPDIR)/file_formats.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/$(DEPDIR)/file_formats_msa.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/$(DEPDIR)/io_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/external.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/external_bt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/external_pf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/hairpin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/hairpin_bt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/hairpin_pf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/internal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/internal_bt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/internal_pf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/multibranch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/multibranch_bt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@loops/$(DEPDIR)/multibranch_pf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@params/$(DEPDIR)/convert.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@params/$(DEPDIR)/default.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@params/$(DEPDIR)/io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@params/$(DEPDIR)/params.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@plotting/$(DEPDIR)/alignments.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@plotting/$(DEPDIR)/layouts.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@plotting/$(DEPDIR)/naview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@plotting/$(DEPDIR)/plot_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@plotting/$(DEPDIR)/probabilities.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@plotting/$(DEPDIR)/structures.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@search/$(DEPDIR)/BoyerMoore.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/msa_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/string_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/structure_tree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/structure_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/svm_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/utils.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

.cxx.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf ../@LIBSVM_DIR@/.libs ../@LIBSVM_DIR@/_libs
	-rm -rf ../json/.libs ../json/_libs
	-rm -rf constraints/.libs constraints/_libs
	-rm -rf datastructures/.libs datastructures/_libs
	-rm -rf io/.libs io/_libs
	-rm -rf loops/.libs loops/_libs
	-rm -rf params/.libs params/_libs
	-rm -rf plotting/.libs plotting/_libs
	-rm -rf search/.libs search/_libs
	-rm -rf utils/.libs utils/_libs
install-nodist_pkgincludeHEADERS: $(nodist_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-nodist_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)
install-vrna_constraintsHEADERS: $(vrna_constraints_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(vrna_constraints_HEADERS)'; test -n "$(vrna_constraintsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vrna_constraintsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vrna_constraintsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(vrna_constraintsdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(vrna_constraintsdir)" || exit $$?; \
	done

uninstall-vrna_constraintsHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(vrna_constraints_HEADERS)'; test -n "$(vrna_constraintsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vrna_constraintsdir)'; $(am__uninstall_files_from_dir)
install-vrna_datastructuresHEADERS: $(vrna_datastructures_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(vrna_datastructures_HEADERS)'; test -n "$(vrna_datastructuresdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vrna_datastructuresdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vrna_datastructuresdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(vrna_datastructuresdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(vrna_datastructuresdir)" || exit $$?; \
	done

uninstall-vrna_datastructuresHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(vrna_datastructures_HEADERS)'; test -n "$(vrna_datastructuresdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vrna_datastructuresdir)'; $(am__uninstall_files_from_dir)
install-vrna_ioHEADERS: $(vrna_io_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(vrna_io_HEADERS)'; test -n "$(vrna_iodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vrna_iodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vrna_iodir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(vrna_iodir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(vrna_iodir)" || exit $$?; \
	done

uninstall-vrna_ioHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(vrna_io_HEADERS)'; test -n "$(vrna_iodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vrna_iodir)'; $(am__uninstall_files_from_dir)
install-vrna_loopsHEADERS: $(vrna_loops_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(vrna_loops_HEADERS)'; test -n "$(vrna_loopsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vrna_loopsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vrna_loopsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(vrna_loopsdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(vrna_loopsdir)" || exit $$?; \
	done

uninstall-vrna_loopsHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(vrna_loops_HEADERS)'; test -n "$(vrna_loopsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vrna_loopsdir)'; $(am__uninstall_files_from_dir)
install-vrna_paramsHEADERS: $(vrna_params_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(vrna_params_HEADERS)'; test -n "$(vrna_paramsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vrna_paramsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vrna_paramsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(vrna_paramsdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(vrna_paramsdir)" || exit $$?; \
	done

uninstall-vrna_paramsHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(vrna_params_HEADERS)'; test -n "$(vrna_paramsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vrna_paramsdir)'; $(am__uninstall_files_from_dir)
install-vrna_plottingHEADERS: $(vrna_plotting_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(vrna_plotting_HEADERS)'; test -n "$(vrna_plottingdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vrna_plottingdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vrna_plottingdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(vrna_plottingdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(vrna_plottingdir)" || exit $$?; \
	done

uninstall-vrna_plottingHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(vrna_plotting_HEADERS)'; test -n "$(vrna_plottingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vrna_plottingdir)'; $(am__uninstall_files_from_dir)
install-vrna_searchHEADERS: $(vrna_search_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(vrna_search_HEADERS)'; test -n "$(vrna_searchdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vrna_searchdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vrna_searchdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(vrna_searchdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(vrna_searchdir)" || exit $$?; \
	done

uninstall-vrna_searchHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(vrna_search_HEADERS)'; test -n "$(vrna_searchdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vrna_searchdir)'; $(am__uninstall_files_from_dir)
install-vrna_utilsHEADERS: $(vrna_utils_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(vrna_utils_HEADERS)'; test -n "$(vrna_utilsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vrna_utilsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vrna_utilsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(vrna_utilsdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(vrna_utilsdir)" || exit $$?; \
	done

uninstall-vrna_utilsHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(vrna_utils_HEADERS)'; test -n "$(vrna_utilsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vrna_utilsdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(vrna_constraintsdir)" "$(DESTDIR)$(vrna_datastructuresdir)" "$(DESTDIR)$(vrna_iodir)" "$(DESTDIR)$(vrna_loopsdir)" "$(DESTDIR)$(vrna_paramsdir)" "$(DESTDIR)$(vrna_plottingdir)" "$(DESTDIR)$(vrna_searchdir)" "$(DESTDIR)$(vrna_utilsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../@LIBSVM_DIR@/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../@LIBSVM_DIR@/$(am__dirstamp)
	-rm -f ../json/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../json/$(am__dirstamp)
	-rm -f constraints/$(DEPDIR)/$(am__dirstamp)
	-rm -f constraints/$(am__dirstamp)
	-rm -f datastructures/$(DEPDIR)/$(am__dirstamp)
	-rm -f datastructures/$(am__dirstamp)
	-rm -f io/$(DEPDIR)/$(am__dirstamp)
	-rm -f io/$(am__dirstamp)
	-rm -f loops/$(DEPDIR)/$(am__dirstamp)
	-rm -f loops/$(am__dirstamp)
	-rm -f params/$(DEPDIR)/$(am__dirstamp)
	-rm -f params/$(am__dirstamp)
	-rm -f plotting/$(DEPDIR)/$(am__dirstamp)
	-rm -f plotting/$(am__dirstamp)
	-rm -f search/$(DEPDIR)/$(am__dirstamp)
	-rm -f search/$(am__dirstamp)
	-rm -f utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f utils/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ../@LIBSVM_DIR@/$(DEPDIR) ../json/$(DEPDIR) ./$(DEPDIR) constraints/$(DEPDIR) datastructures/$(DEPDIR) io/$(DEPDIR) loops/$(DEPDIR) params/$(DEPDIR) plotting/$(DEPDIR) search/$(DEPDIR) utils/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-nodist_pkgincludeHEADERS \
	install-pkgincludeHEADERS install-vrna_constraintsHEADERS \
	install-vrna_datastructuresHEADERS install-vrna_ioHEADERS \
	install-vrna_loopsHEADERS install-vrna_paramsHEADERS \
	install-vrna_plottingHEADERS install-vrna_searchHEADERS \
	install-vrna_utilsHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ../@LIBSVM_DIR@/$(DEPDIR) ../json/$(DEPDIR) ./$(DEPDIR) constraints/$(DEPDIR) datastructures/$(DEPDIR) io/$(DEPDIR) loops/$(DEPDIR) params/$(DEPDIR) plotting/$(DEPDIR) search/$(DEPDIR) utils/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-nodist_pkgincludeHEADERS uninstall-pkgincludeHEADERS \
	uninstall-vrna_constraintsHEADERS \
	uninstall-vrna_datastructuresHEADERS uninstall-vrna_ioHEADERS \
	uninstall-vrna_loopsHEADERS uninstall-vrna_paramsHEADERS \
	uninstall-vrna_plottingHEADERS uninstall-vrna_searchHEADERS \
	uninstall-vrna_utilsHEADERS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am all-local \
	check check-am clean clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-nodist_pkgincludeHEADERS install-pdf \
	install-pdf-am install-pkgincludeHEADERS install-ps \
	install-ps-am install-strip install-vrna_constraintsHEADERS \
	install-vrna_datastructuresHEADERS install-vrna_ioHEADERS \
	install-vrna_loopsHEADERS install-vrna_paramsHEADERS \
	install-vrna_plottingHEADERS install-vrna_searchHEADERS \
	install-vrna_utilsHEADERS installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-nodist_pkgincludeHEADERS uninstall-pkgincludeHEADERS \
	uninstall-vrna_constraintsHEADERS \
	uninstall-vrna_datastructuresHEADERS uninstall-vrna_ioHEADERS \
	uninstall-vrna_loopsHEADERS uninstall-vrna_paramsHEADERS \
	uninstall-vrna_plottingHEADERS uninstall-vrna_searchHEADERS \
	uninstall-vrna_utilsHEADERS

.PRECIOUS: Makefile


# static library for subpackages
all-local:      libRNA.a

libRNA.a: libRNA.la
	$(AM_V_GEN)( \
    $(LIBTOOL) --config > libtoolconfig.tmp && \
    ( \. ./libtoolconfig.tmp; cp "$$objdir/libRNA.a" ./ ) && \
    rm -f libtoolconfig.tmp \
  )

clean-local:
	-rm -f libRNA.a

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
